function cal(m, n) { 
    let sum_1 = 0;
    let i = 1;
    for (; i < m; ++i) {
        sum_1 = sum_1 + i; 
    }

    let sum_2 = 0;
    let j = 1;
    for (; j < n; ++j) {
        sum_2 = sum_2 + j; 
    }

    return sum_1 + sum_2; 
}
/**
 * 从代码中可以看出，m 和 n 是表示两个数据规模。
 * 我们无法事先评估 m 和 n 谁的量级大，所以我们 在表示复杂度的时候，就不能简单地利用加法法则，省略掉其中一个。
 * 所以，上面代码的时间复杂 度就是 O(m+n)。
    针对这种情况，原来的加法法则就不正确了，我们需要将加法规则改为:T1(m) + T2(n) = O(f(m) + g(n))。
    但是乘法法则继续有效:T1(m)*T2(n) = O(f(m) * f(n))。
 */